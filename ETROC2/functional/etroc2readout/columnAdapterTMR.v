/****************************************************************************************************
 *                          ! THIS FILE WAS AUTO-GENERATED BY TMRG TOOL !                           *
 *                                   ! DO NOT EDIT IT MANUALLY !                                    *
 *                                                                                                  *
 * file    : ./columnAdapterTMR.v                                                                   *
 *                                                                                                  *
 * user    : dataogong                                                                              *
 * host    : 16-11005.local                                                                         *
 * date    : 24/04/2021 20:36:58                                                                    *
 *                                                                                                  *
 * workdir : /Users/dataogong/Documents/Gitlab/ETROCI2C/etroc2_swreadout/rtl/ETROC2Readout          *
 * cmd     : /Users/dataogong/Documents/ActiveDocument/Gitlab/tmrg/bin/tmrg columnAdapter.v         *
 * tmrg rev: e2867c77ccb74667bff8dd6a91891cdefaaa0580                                               *
 *                                                                                                  *
 * src file: columnAdapter.v                                                                        *
 *           File is NOT under version control!                                                     *
 *           Modification time : 2021-04-24 20:36:53.966434                                         *
 *           File Size         : 1721                                                               *
 *           MD5 hash          : 614aa5834442872162d9d6a527e76bfa                                   *
 *                                                                                                  *
 ****************************************************************************************************/

`timescale  1ns / 100ps

module columnAdapterTMR(
  input [3:0] trigHits,
  input [3:0] columnAddrInA,
  input [3:0] columnAddrInB,
  input [3:0] columnAddrInC,
  output [3:0] columnAddrNextOutA,
  output [3:0] columnAddrNextOutB,
  output [3:0] columnAddrNextOutC,
  output [3:0] columnAddr,
  output [7:0] columTrigHits
);
wor columnAddrInIncTmrErrorC;
wire [3:0] columnAddrInIncVotedC;
wor columnAddrInIncTmrErrorB;
wire [3:0] columnAddrInIncVotedB;
wor columnAddrInIncTmrErrorA;
wire [3:0] columnAddrInIncVotedA;
wor columnAddrInTmrError;
wire [3:0] columnAddrIn;
wire [3:0] columnAddrInIncA =  columnAddrInA+1;
wire [3:0] columnAddrInIncB =  columnAddrInB+1;
wire [3:0] columnAddrInIncC =  columnAddrInC+1;
assign columnAddrNextOutA =  columnAddrInIncVotedA;
assign columnAddrNextOutB =  columnAddrInIncVotedB;
assign columnAddrNextOutC =  columnAddrInIncVotedC;
assign columnAddr =  columnAddrIn;
assign columTrigHits[0]  =  (columnAddr[2] ==1'b0) ? trigHits[0]  : 1'b0;
assign columTrigHits[1]  =  (columnAddr[2] ==1'b0) ? trigHits[1]  : 1'b0;
assign columTrigHits[2]  =  (columnAddr[2] ==1'b0) ? trigHits[2]  : 1'b0;
assign columTrigHits[3]  =  (columnAddr[2] ==1'b0) ? trigHits[3]  : 1'b0;
assign columTrigHits[4]  =  (columnAddr[2] ==1'b1) ? trigHits[0]  : 1'b0;
assign columTrigHits[5]  =  (columnAddr[2] ==1'b1) ? trigHits[1]  : 1'b0;
assign columTrigHits[6]  =  (columnAddr[2] ==1'b1) ? trigHits[2]  : 1'b0;
assign columTrigHits[7]  =  (columnAddr[2] ==1'b1) ? trigHits[3]  : 1'b0;

majorityVoter #(.WIDTH(4)) columnAddrInVoter (
    .inA(columnAddrInA),
    .inB(columnAddrInB),
    .inC(columnAddrInC),
    .out(columnAddrIn),
    .tmrErr(columnAddrInTmrError)
    );

majorityVoter #(.WIDTH(4)) columnAddrInIncVoterA (
    .inA(columnAddrInIncA),
    .inB(columnAddrInIncB),
    .inC(columnAddrInIncC),
    .out(columnAddrInIncVotedA),
    .tmrErr(columnAddrInIncTmrErrorA)
    );

majorityVoter #(.WIDTH(4)) columnAddrInIncVoterB (
    .inA(columnAddrInIncA),
    .inB(columnAddrInIncB),
    .inC(columnAddrInIncC),
    .out(columnAddrInIncVotedB),
    .tmrErr(columnAddrInIncTmrErrorB)
    );

majorityVoter #(.WIDTH(4)) columnAddrInIncVoterC (
    .inA(columnAddrInIncA),
    .inB(columnAddrInIncB),
    .inC(columnAddrInIncC),
    .out(columnAddrInIncVotedC),
    .tmrErr(columnAddrInIncTmrErrorC)
    );
endmodule



// /Users/dataogong/Documents/ActiveDocument/Gitlab/tmrg/tmrg/../common/voter.v
module majorityVoter (inA, inB, inC, out, tmrErr);
  parameter WIDTH = 1;
  input   [(WIDTH-1):0]   inA, inB, inC;
  output  [(WIDTH-1):0]   out;
  output                  tmrErr;
  reg                     tmrErr;
  assign out = (inA&inB) | (inA&inC) | (inB&inC);
  always @(inA or inB or inC)
  begin
    if (inA!=inB || inA!=inC || inB!=inC)
      tmrErr = 1;
    else
      tmrErr = 0;
  end
endmodule
