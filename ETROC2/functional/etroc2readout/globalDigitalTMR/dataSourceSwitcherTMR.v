/****************************************************************************************************
 *                          ! THIS FILE WAS AUTO-GENERATED BY TMRG TOOL !                           *
 *                                   ! DO NOT EDIT IT MANUALLY !                                    *
 *                                                                                                  *
 * file    : ./globalDigitalTMR/dataSourceSwitcherTMR.v                                             *
 *                                                                                                  *
 * user    : dtgong                                                                                 *
 * host    : sphy7asic01.smu.edu                                                                    *
 * date    : 03/04/2022 15:30:03                                                                    *
 *                                                                                                  *
 * workdir : /users/dtgong/workarea/tsmc65/ETLROC/digital/ETROC2Readout/gitlab/etroc2readout        *
 * cmd     : ../../tmrg/tmrg/bin/tmrg -c tmrgGlobal.cnf                                             *
 * tmrg rev:                                                                                        *
 *                                                                                                  *
 * src file: dataSourceSwitcher.v                                                                   *
 *           File is NOT under version control!                                                     *
 *           Modification time : 2022-04-01 16:37:19.638019                                         *
 *           File Size         : 10099                                                              *
 *           MD5 hash          : 6ed64b7abc2ff96d58be0a4aaf8660ba                                   *
 *                                                                                                  *
 ****************************************************************************************************/

`timescale  1ns / 10ps
`include  "commonDefinition.v"
module dataSourceSwitcherTMR #(
  parameter BCSTWIDTH=27
)(
     input [45:0] dataFromLeftPixel,
     input  unreadHitFromLeftPixel,
     output  readToLeftPixel,
     output [BCSTWIDTH-1:0] BCSTToLeftPixel,
     input [7:0] trigHitsFromLeftPixel,
     input [45:0] dataFromRightPixel,
     input  unreadHitFromRightPixel,
     output  readToRightPixel,
     output [BCSTWIDTH-1:0] BCSTToRightPixel,
     input [7:0] trigHitsFromRightPixel,
     output [45:0] dnDataToLeftGlobal,
     output  dnUnreadHitToLeftGlobal,
     input  dnReadFromLeftGlobal,
     input [BCSTWIDTH-1:0] dnBCSTFromLeftGlobal,
     output [4:0] trigDataSizeLeftA,
     output [4:0] trigDataSizeLeftB,
     output [4:0] trigDataSizeLeftC,
     output [15:0] trigHitsToLeftGlobal,
     output [45:0] dnDataToRightGlobal,
     output  dnUnreadHitToRightGlobal,
     input  dnReadFromRightGlobal,
     input [BCSTWIDTH-1:0] dnBCSTFromRightGlobal,
     output [4:0] trigDataSizeRightA,
     output [4:0] trigDataSizeRightB,
     output [4:0] trigDataSizeRightC,
     output [15:0] trigHitsToRightGlobal,
     input [2:0] triggerGranularityA,
     input [2:0] triggerGranularityB,
     input [2:0] triggerGranularityC,
     input  mergeTrigDataA,
     input  mergeTrigDataB,
     input  mergeTrigDataC,
     input  singlePortA,
     input  singlePortB,
     input  singlePortC
);
wire [4:0] trigDataSizeC;
wire [4:0] trigDataSizeB;
wire [4:0] trigDataSizeA;
wor mergeTrigDataTmrError;
wire mergeTrigData;
wor singlePortTmrError;
wire singlePort;
wor triggerGranularityTmrError;
wire [2:0] triggerGranularity;
wire readToRightPixelCombine;
wire readToLeftPixelCombine;
wire [BCSTWIDTH-1:0] BCSTToRightPixelCombine;
wire [BCSTWIDTH-1:0] BCSTToLeftPixelCombine;
wire [45:0] dnDataToGlobalCombine;
wire dnUnreadHitToGlobalCombine;

SWCell #(.DATAWIDTH(46), .BCSTWIDTH(BCSTWIDTH), .HITSWIDTH(1)) SWCellInstCenter (
          .ctData(dataFromLeftPixel),
          .ctHits(unreadHitFromLeftPixel),
          .ctRead(readToLeftPixelCombine),
          .ctBCST(BCSTToLeftPixelCombine),
          .upData(dataFromRightPixel),
          .upHits(unreadHitFromRightPixel),
          .upRead(readToRightPixelCombine),
          .upBCST(BCSTToRightPixelCombine),
          .dnData(dnDataToGlobalCombine),
          .dnHits(dnUnreadHitToGlobalCombine),
          .dnRead(dnReadFromRightGlobal),
          .dnBCST(dnBCSTFromRightGlobal)
          );
assign dnDataToLeftGlobal =  (singlePort|~mergeTrigData) ? 46'd0 : dataFromLeftPixel;
assign dnUnreadHitToLeftGlobal =  (singlePort|~mergeTrigData) ? 1'b0 : unreadHitFromLeftPixel;
assign dnDataToRightGlobal =  (singlePort|~mergeTrigData) ? dnDataToGlobalCombine : dataFromRightPixel;
assign dnUnreadHitToRightGlobal =  (singlePort|~mergeTrigData) ? dnUnreadHitToGlobalCombine : unreadHitFromRightPixel;
assign BCSTToLeftPixel =  (singlePort|~mergeTrigData) ? BCSTToLeftPixelCombine : dnBCSTFromLeftGlobal;
assign readToLeftPixel =  (singlePort|~mergeTrigData) ? readToLeftPixelCombine : dnReadFromLeftGlobal;
assign BCSTToRightPixel =  (singlePort|~mergeTrigData) ? BCSTToRightPixelCombine : dnBCSTFromRightGlobal;
assign readToRightPixel =  (singlePort|~mergeTrigData) ? readToRightPixelCombine : dnReadFromRightGlobal;
wire [4:0] trigDataSize;
assign trigDataSize =  triggerGranularity==3'd1 ? 5'd1 : (triggerGranularity==3'd2 ? 5'd2 : (triggerGranularity==3'd3 ? 5'd4 : (triggerGranularity==3'd4 ? 5'd8 : (triggerGranularity==3'd5 ? 5'd16 : 5'd0))));
assign trigDataSizeRightA =  singlePortA ? trigDataSizeA : (mergeTrigDataA ? trigDataSizeA>>1 : 5'd0);
assign trigDataSizeRightB =  singlePortB ? trigDataSizeB : (mergeTrigDataB ? trigDataSizeB>>1 : 5'd0);
assign trigDataSizeRightC =  singlePortC ? trigDataSizeC : (mergeTrigDataC ? trigDataSizeC>>1 : 5'd0);
assign trigDataSizeLeftA =  singlePortA ? 5'd0 : (mergeTrigDataA ? trigDataSizeA>>1 : trigDataSizeA);
assign trigDataSizeLeftB =  singlePortB ? 5'd0 : (mergeTrigDataB ? trigDataSizeB>>1 : trigDataSizeB);
assign trigDataSizeLeftC =  singlePortC ? 5'd0 : (mergeTrigDataC ? trigDataSizeC>>1 : trigDataSizeC);
wire [7:0] rightTrigHits;
wire [7:0] leftTrigHits;
assign rightTrigHits =  trigHitsFromRightPixel;
assign leftTrigHits =  trigHitsFromLeftPixel;
wire [15:0] combineTrigHits;
assign combineTrigHits =  (triggerGranularity==3'd1) ? {15'd0,(| rightTrigHits )|(| leftTrigHits )} : ((triggerGranularity==3'd2) ? {14'd0,| leftTrigHits ,| rightTrigHits } : ((triggerGranularity==3'd3) ? {12'd0,leftTrigHits[2] |leftTrigHits[3] |leftTrigHits[6] |leftTrigHits[7] ,leftTrigHits[0] |leftTrigHits[1] |leftTrigHits[4] |leftTrigHits[5] ,rightTrigHits[2] |rightTrigHits[3] |rightTrigHits[6] |rightTrigHits[7] ,rightTrigHits[0] |rightTrigHits[1] |rightTrigHits[4] |rightTrigHits[5] } : ((triggerGranularity==3'd4) ? {8'd0,leftTrigHits[7] |leftTrigHits[6] ,leftTrigHits[5] |leftTrigHits[4] ,leftTrigHits[3] |leftTrigHits[2] ,leftTrigHits[1] |leftTrigHits[0] ,rightTrigHits[7] |rightTrigHits[6] ,rightTrigHits[5] |rightTrigHits[4] ,rightTrigHits[3] |rightTrigHits[2] ,rightTrigHits[1] |rightTrigHits[0] } : ((triggerGranularity==3'd5) ? {leftTrigHits,rightTrigHits} : 16'd0))));
wire [7:0] splitTrigHitsRight;
wire [7:0] splitTrigHitsLeft;
assign splitTrigHitsLeft =  (triggerGranularity==3'd2) ? {7'd0,| leftTrigHits } : ((triggerGranularity==3'd4) ? {6'd0,leftTrigHits[2] |leftTrigHits[3] |leftTrigHits[6] |leftTrigHits[7] ,leftTrigHits[0] |leftTrigHits[1] |leftTrigHits[4] |leftTrigHits[5] } : ((triggerGranularity==3'd5) ? leftTrigHits : 8'd0));
assign splitTrigHitsRight =  (triggerGranularity==3'd2) ? {7'd0,| rightTrigHits } : ((triggerGranularity==3'd4) ? {6'd0,rightTrigHits[2] |rightTrigHits[3] |rightTrigHits[6] |rightTrigHits[7] ,rightTrigHits[0] |rightTrigHits[1] |rightTrigHits[4] |rightTrigHits[5] } : ((triggerGranularity==3'd5) ? rightTrigHits : 8'd0));
assign trigHitsToLeftGlobal =  singlePort ? 16'd0 : (mergeTrigData ? {8'd0,splitTrigHitsLeft} : combineTrigHits);
assign trigHitsToRightGlobal =  singlePort ? combineTrigHits : (mergeTrigData ? {8'd0,splitTrigHitsRight} : 16'd0);

majorityVoter #(.WIDTH(3)) triggerGranularityVoter (
          .inA(triggerGranularityA),
          .inB(triggerGranularityB),
          .inC(triggerGranularityC),
          .out(triggerGranularity),
          .tmrErr(triggerGranularityTmrError)
          );

majorityVoter singlePortVoter (
          .inA(singlePortA),
          .inB(singlePortB),
          .inC(singlePortC),
          .out(singlePort),
          .tmrErr(singlePortTmrError)
          );

majorityVoter mergeTrigDataVoter (
          .inA(mergeTrigDataA),
          .inB(mergeTrigDataB),
          .inC(mergeTrigDataC),
          .out(mergeTrigData),
          .tmrErr(mergeTrigDataTmrError)
          );

fanout #(.WIDTH(5)) trigDataSizeFanout (
          .in(trigDataSize),
          .outA(trigDataSizeA),
          .outB(trigDataSizeB),
          .outC(trigDataSizeC)
          );
endmodule

