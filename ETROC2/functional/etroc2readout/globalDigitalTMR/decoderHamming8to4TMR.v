/****************************************************************************************************
 *                          ! THIS FILE WAS AUTO-GENERATED BY TMRG TOOL !                           *
 *                                   ! DO NOT EDIT IT MANUALLY !                                    *
 *                                                                                                  *
 * file    : ./globalDigitalTMR/decoderHamming8to4TMR.v                                             *
 *                                                                                                  *
 * user    : dtgong                                                                                 *
 * host    : sphy7asic01.smu.edu                                                                    *
 * date    : 03/04/2022 15:30:05                                                                    *
 *                                                                                                  *
 * workdir : /users/dtgong/workarea/tsmc65/ETLROC/digital/ETROC2Readout/gitlab/etroc2readout        *
 * cmd     : ../../tmrg/tmrg/bin/tmrg -c tmrgGlobal.cnf                                             *
 * tmrg rev:                                                                                        *
 *                                                                                                  *
 * src file: fastcommand/decoderHamming8to4.v                                                       *
 *           File is NOT under version control!                                                     *
 *           Modification time : 2022-03-22 20:45:27.020553                                         *
 *           File Size         : 2175                                                               *
 *           MD5 hash          : ac2bad0ebb93b22bb7722c353ef65fe7                                   *
 *                                                                                                  *
 ****************************************************************************************************/

`timescale  1ns/1ps
module decoderHamming8to4TMR(
     DDIA,
     DDIB,
     DDIC,
     DDOA,
     DDOB,
     DDOC,
     E1A,
     E1B,
     E1C,
     E2A,
     E2B,
     E2C
);
input [7:0] DDIA;
input [7:0] DDIB;
input [7:0] DDIC;
output [3:0] DDOA;
output [3:0] DDOB;
output [3:0] DDOC;
output E1A;
output E1B;
output E1C;
output E2A;
output E2B;
output E2C;
wire [3:0] ncA;
wire [3:0] ncB;
wire [3:0] ncC;
wire [3:0] errBitA;
wire [3:0] errBitB;
wire [3:0] errBitC;
wire [7:0] XIA;
wire [7:0] XIB;
wire [7:0] XIC;
assign XIA =  DDIA;
assign XIB =  DDIB;
assign XIC =  DDIC;
assign ncA[0]  =  XIA[0] ^XIA[3] ^XIA[5] ^XIA[6] ;
assign ncB[0]  =  XIB[0] ^XIB[3] ^XIB[5] ^XIB[6] ;
assign ncC[0]  =  XIC[0] ^XIC[3] ^XIC[5] ^XIC[6] ;
assign ncA[1]  =  XIA[1] ^XIA[3] ^XIA[5] ^XIA[7] ;
assign ncB[1]  =  XIB[1] ^XIB[3] ^XIB[5] ^XIB[7] ;
assign ncC[1]  =  XIC[1] ^XIC[3] ^XIC[5] ^XIC[7] ;
assign ncA[2]  =  XIA[2] ^XIA[3] ^XIA[6] ^XIA[7] ;
assign ncB[2]  =  XIB[2] ^XIB[3] ^XIB[6] ^XIB[7] ;
assign ncC[2]  =  XIC[2] ^XIC[3] ^XIC[6] ^XIC[7] ;
assign ncA[3]  =  XIA[4] ^XIA[5] ^XIA[6] ^XIA[7] ;
assign ncB[3]  =  XIB[4] ^XIB[5] ^XIB[6] ^XIB[7] ;
assign ncC[3]  =  XIC[4] ^XIC[5] ^XIC[6] ^XIC[7] ;
assign E1A =  |ncA;
assign E1B =  |ncB;
assign E1C =  |ncC;
assign E2A =  E1A&&!(^ ncA );
assign E2B =  E1B&&!(^ ncB );
assign E2C =  E1C&&!(^ ncC );
assign errBitA[0]  =  !ncA[3] &ncA[2] &ncA[1] &ncA[0] ;
assign errBitB[0]  =  !ncB[3] &ncB[2] &ncB[1] &ncB[0] ;
assign errBitC[0]  =  !ncC[3] &ncC[2] &ncC[1] &ncC[0] ;
assign errBitA[1]  =  ncA[3] &!ncA[2] &ncA[1] &ncA[0] ;
assign errBitB[1]  =  ncB[3] &!ncB[2] &ncB[1] &ncB[0] ;
assign errBitC[1]  =  ncC[3] &!ncC[2] &ncC[1] &ncC[0] ;
assign errBitA[2]  =  ncA[3] &ncA[2] &!ncA[1] &ncA[0] ;
assign errBitB[2]  =  ncB[3] &ncB[2] &!ncB[1] &ncB[0] ;
assign errBitC[2]  =  ncC[3] &ncC[2] &!ncC[1] &ncC[0] ;
assign errBitA[3]  =  ncA[3] &ncA[2] &ncA[1] &!ncA[0] ;
assign errBitB[3]  =  ncB[3] &ncB[2] &ncB[1] &!ncB[0] ;
assign errBitC[3]  =  ncC[3] &ncC[2] &ncC[1] &!ncC[0] ;
assign DDOA[0]  =  XIA[3] &!errBitA[0] |!XIA[3] &errBitA[0] ;
assign DDOB[0]  =  XIB[3] &!errBitB[0] |!XIB[3] &errBitB[0] ;
assign DDOC[0]  =  XIC[3] &!errBitC[0] |!XIC[3] &errBitC[0] ;
assign DDOA[1]  =  XIA[5] &!errBitA[1] |!XIA[5] &errBitA[1] ;
assign DDOB[1]  =  XIB[5] &!errBitB[1] |!XIB[5] &errBitB[1] ;
assign DDOC[1]  =  XIC[5] &!errBitC[1] |!XIC[5] &errBitC[1] ;
assign DDOA[2]  =  XIA[6] &!errBitA[2] |!XIA[6] &errBitA[2] ;
assign DDOB[2]  =  XIB[6] &!errBitB[2] |!XIB[6] &errBitB[2] ;
assign DDOC[2]  =  XIC[6] &!errBitC[2] |!XIC[6] &errBitC[2] ;
assign DDOA[3]  =  XIA[7] &!errBitA[3] |!XIA[7] &errBitA[3] ;
assign DDOB[3]  =  XIB[7] &!errBitB[3] |!XIB[7] &errBitB[3] ;
assign DDOC[3]  =  XIC[7] &!errBitC[3] |!XIC[7] &errBitC[3] ;
endmodule

