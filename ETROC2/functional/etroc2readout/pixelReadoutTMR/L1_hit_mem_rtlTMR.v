/****************************************************************************************************
 *                          ! THIS FILE WAS AUTO-GENERATED BY TMRG TOOL !                           *
 *                                   ! DO NOT EDIT IT MANUALLY !                                    *
 *                                                                                                  *
 * file    : ./pixelTMR2/L1_hit_mem_rtlTMR.v                                                        *
 *                                                                                                  *
 * user    : dataogong                                                                              *
 * host    : 16-11005.local                                                                         *
 * date    : 13/05/2021 11:57:14                                                                    *
 *                                                                                                  *
 * workdir : /Users/dataogong/Documents/Gitlab/ETROCI2C/etroc2_swreadout/rtl/ETROC2Readout          *
 * cmd     : /Users/dataogong/Documents/ActiveDocument/Gitlab/tmrg/bin/tmrg -c tmrgPixel2.cnf       *
 * tmrg rev: e2867c77ccb74667bff8dd6a91891cdefaaa0580                                               *
 *                                                                                                  *
 * src file: memBlock/L1_hit_mem_rtl.v                                                              *
 *           File is NOT under version control!                                                     *
 *           Modification time : 2021-04-29 14:33:30.761559                                         *
 *           File Size         : 5611                                                               *
 *           MD5 hash          : 2a8824ba98a0e947821323553c532b21                                   *
 *                                                                                                  *
 ****************************************************************************************************/

`timescale  1ns/1ps

`include "commonDefinition.v"

module L1_hit_mem_rtl_topTMR(
     QA,
     E1A,
     E2A,
     CLKA,
     CENA,
     AA,
     CLKB,
     CENB,
     AB,
     DB,
     EMAA,
     EMAB,
     RET1N,
     COLLDISN
);
output QA;
output E1A;
output E2A;
input CLKA;
input CENA;
input [6:0] AA;
input CLKB;
input CENB;
input [6:0] AB;
input DB;
input [2:0] EMAA;
input [2:0] EMAB;
input RET1N;
input COLLDISN;
wire [3:0] QOA;
wire [3:0] DIB;

L1_hit_mem_fr_topTMR u0 (
          .QOA(QOA),
          .CLKA(CLKA),
          .CENA(CENA),
          .AA(AA),
          .CLKB(CLKB),
          .CENB(CENB),
          .AB(AB),
          .DIB(DIB),
          .EMAA(EMAA),
          .EMAB(EMAB),
          .RET1N(RET1N),
          .COLLDISN(COLLDISN)
          );

L1_hit_mem_encoderTMR e0 (
          .EDI(DB),
          .EDO(DIB)
          );

L1_hit_mem_decoderTMR d0 (
          .DDI(QOA),
          .DDO(QA),
          .E1(E1A),
          .E2(E2A)
          );
endmodule

module L1_hit_mem_fr_topTMR(
     QOA,
     CLKA,
     CENA,
     AA,
     CLKB,
     CENB,
     AB,
     DIB,
     EMAA,
     EMAB,
     RET1N,
     COLLDISN
);
output [3:0] QOA;
input CLKA;
input CENA;
input [6:0] AA;
input CLKB;
input CENB;
input [6:0] AB;
input [3:0] DIB;
input [2:0] EMAA;
input [2:0] EMAB;
input RET1N;
input COLLDISN;
wire [3:0] DB;
wire [3:0] QA;
assign DB =  {DIB[3] ,~ DIB[2]  ,DIB[1] ,~ DIB[0]  };
assign QOA =  {QA[3] ,~ QA[2]  ,QA[1] ,~ QA[0]  };
`ifdef LATCH_RAM
      latchedBasedRAM #(.data_width(4),.depth(128),.log_depth(7),.delay(4)) u0
 `else
   L1_hit_mem u0 
`endif  
     (
          .QA(QA),
          .CLKA(CLKA),
          .CENA(CENA),
          .AA(AA),
          .CLKB(CLKB),
          .CENB(CENB),
          .AB(AB),
          .DB(DB),
          .EMAA(EMAA),
          .EMAB(EMAB),
          .RET1N(RET1N),
          .COLLDISN(COLLDISN)
          );
endmodule

module L1_hit_mem_encoderTMR(
     EDI,
     EDO
);
input [0:0] EDI;
output [3:0] EDO;
assign EDO[0]  =  EDI[0] ;
assign EDO[1]  =  EDI[0] ;
assign EDO[2]  =  EDI[0] ;
assign EDO[3]  =  EDI[0] ;
endmodule

module L1_hit_mem_decoderTMR(
     DDI,
     DDO,
     E1,
     E2
);
input [3:0] DDI;
output [0:0] DDO;
output E1;
output E2;
wire [2:0] nc;
wire [0:0] errBit;
wire [3:0] XI;
assign XI =  DDI;
assign nc[0]  =  XI[0] ^XI[3] ;
assign nc[1]  =  XI[1] ^XI[3] ;
assign nc[2]  =  XI[2] ^XI[3] ;
assign E1 =  |nc;
assign E2 =  E1&~(^ nc );
assign errBit[0]  =  nc[2] &nc[1] &nc[0] ;
assign DDO[0]  =  XI[3] &~errBit[0] |~XI[3] &errBit[0] ;
endmodule

