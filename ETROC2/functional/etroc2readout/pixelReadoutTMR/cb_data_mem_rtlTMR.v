/****************************************************************************************************
 *                          ! THIS FILE WAS AUTO-GENERATED BY TMRG TOOL !                           *
 *                                   ! DO NOT EDIT IT MANUALLY !                                    *
 *                                                                                                  *
 * file    : ./pixelTMR2/cb_data_mem_rtlTMR.v                                                       *
 *                                                                                                  *
 * user    : dataogong                                                                              *
 * host    : 16-11005.local                                                                         *
 * date    : 13/05/2021 11:57:14                                                                    *
 *                                                                                                  *
 * workdir : /Users/dataogong/Documents/Gitlab/ETROCI2C/etroc2_swreadout/rtl/ETROC2Readout          *
 * cmd     : /Users/dataogong/Documents/ActiveDocument/Gitlab/tmrg/bin/tmrg -c tmrgPixel2.cnf       *
 * tmrg rev: e2867c77ccb74667bff8dd6a91891cdefaaa0580                                               *
 *                                                                                                  *
 * src file: memBlock/cb_data_mem_rtl.v                                                             *
 *           File is NOT under version control!                                                     *
 *           Modification time : 2021-04-12 23:36:13.690384                                         *
 *           File Size         : 6481                                                               *
 *           MD5 hash          : a7e6472f3ec1dd112f25716a913b5fce                                   *
 *                                                                                                  *
 ****************************************************************************************************/

`timescale  1ns/1ps

`include "commonDefinition.v"

module cb_data_mem_rtl_topTMR(
     QA,
     CLKA,
     CENA,
     AA,
     CLKB,
     CENB,
     AB,
     DB,
     EMAA,
     EMAB,
     RET1N,
     COLLDISN
);
output [35:0] QA;
input CLKA;
input CENA;
input [8:0] AA;
input CLKB;
input CENB;
input [8:0] AB;
input [28:0] DB;
input [2:0] EMAA;
input [2:0] EMAB;
input RET1N;
input COLLDISN;
wire [35:0] QOA;
wire [35:0] DIB;

cb_data_mem_fr_topTMR u0 (
          .QOA(QOA),
          .CLKA(CLKA),
          .CENA(CENA),
          .AA(AA),
          .CLKB(CLKB),
          .CENB(CENB),
          .AB(AB),
          .DIB(DIB),
          .EMAA(EMAA),
          .EMAB(EMAB),
          .RET1N(RET1N),
          .COLLDISN(COLLDISN)
          );

cb_data_mem_encoderTMR e0 (
          .EDI(DB),
          .EDO(DIB)
          );
assign QA =  QOA;
endmodule

module cb_data_mem_fr_topTMR(
     QOA,
     CLKA,
     CENA,
     AA,
     CLKB,
     CENB,
     AB,
     DIB,
     EMAA,
     EMAB,
     RET1N,
     COLLDISN
);
output [35:0] QOA;
input CLKA;
input CENA;
input [8:0] AA;
input CLKB;
input CENB;
input [8:0] AB;
input [35:0] DIB;
input [2:0] EMAA;
input [2:0] EMAB;
input RET1N;
input COLLDISN;
wire [35:0] DB;
wire [35:0] QA;
assign DB =  DIB;
assign QOA =  QA;
`ifdef LATCH_RAM
   //wire [35:0]    QA2;
     latchedBasedRAM #(.data_width(36),.depth(512),.log_depth(9),.delay(4)) u0
`else
    cb_data_mem u0 
`endif
          (
          .QA(QA),
          .CLKA(CLKA),
          .CENA(CENA),
          .AA(AA),
          .CLKB(CLKB),
          .CENB(CENB),
          .AB(AB),
          .DB(DB),
          .EMAA(EMAA),
          .EMAB(EMAB),
          .RET1N(RET1N),
          .COLLDISN(COLLDISN)
          );
endmodule

module cb_data_mem_encoderTMR(
     EDI,
     EDO
);
input [28:0] EDI;
output [35:0] EDO;
assign EDO[0]  =  EDI[0] ^EDI[1] ^EDI[2] ^EDI[4] ^EDI[5] ^EDI[7] ^EDI[9] ^EDI[10] ^EDI[12] ^EDI[17] ^EDI[20] ^EDI[24] ;
assign EDO[1]  =  EDI[0] ^EDI[1] ^EDI[3] ^EDI[4] ^EDI[6] ^EDI[9] ^EDI[11] ^EDI[13] ^EDI[14] ^EDI[16] ^EDI[18] ^EDI[21] ^EDI[25] ;
assign EDO[2]  =  EDI[0] ^EDI[2] ^EDI[3] ^EDI[5] ^EDI[6] ^EDI[8] ^EDI[10] ^EDI[11] ^EDI[15] ^EDI[16] ^EDI[19] ^EDI[22] ^EDI[26] ;
assign EDO[3]  =  EDI[0] ;
assign EDO[4]  =  EDI[1] ^EDI[2] ^EDI[3] ^EDI[7] ^EDI[8] ^EDI[12] ^EDI[13] ^EDI[17] ^EDI[18] ^EDI[19] ^EDI[23] ^EDI[27] ;
assign EDO[5]  =  EDI[1] ;
assign EDO[6]  =  EDI[2] ;
assign EDO[7]  =  EDI[3] ;
assign EDO[8]  =  EDI[4] ^EDI[5] ^EDI[6] ^EDI[7] ^EDI[8] ^EDI[14] ^EDI[15] ^EDI[20] ^EDI[21] ^EDI[22] ^EDI[23] ^EDI[28] ;
assign EDO[9]  =  EDI[4] ;
assign EDO[10]  =  EDI[5] ;
assign EDO[11]  =  EDI[6] ;
assign EDO[12]  =  EDI[7] ;
assign EDO[13]  =  EDI[8] ;
assign EDO[14]  =  EDI[9] ^EDI[10] ^EDI[11] ^EDI[12] ^EDI[13] ^EDI[14] ^EDI[15] ^EDI[24] ^EDI[25] ^EDI[26] ^EDI[27] ^EDI[28] ;
assign EDO[15]  =  EDI[9] ;
assign EDO[16]  =  EDI[10] ;
assign EDO[17]  =  EDI[11] ;
assign EDO[18]  =  EDI[12] ;
assign EDO[19]  =  EDI[13] ;
assign EDO[20]  =  EDI[14] ;
assign EDO[21]  =  EDI[15] ;
assign EDO[22]  =  EDI[16] ^EDI[17] ^EDI[18] ^EDI[19] ^EDI[20] ^EDI[21] ^EDI[22] ^EDI[23] ^EDI[24] ^EDI[25] ^EDI[26] ^EDI[27] ^EDI[28] ;
assign EDO[23]  =  EDI[16] ;
assign EDO[24]  =  EDI[17] ;
assign EDO[25]  =  EDI[18] ;
assign EDO[26]  =  EDI[19] ;
assign EDO[27]  =  EDI[20] ;
assign EDO[28]  =  EDI[21] ;
assign EDO[29]  =  EDI[22] ;
assign EDO[30]  =  EDI[23] ;
assign EDO[31]  =  EDI[24] ;
assign EDO[32]  =  EDI[25] ;
assign EDO[33]  =  EDI[26] ;
assign EDO[34]  =  EDI[27] ;
assign EDO[35]  =  EDI[28] ;
endmodule

