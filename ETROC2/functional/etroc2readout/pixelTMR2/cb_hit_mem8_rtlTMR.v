/****************************************************************************************************
 *                          ! THIS FILE WAS AUTO-GENERATED BY TMRG TOOL !                           *
 *                                   ! DO NOT EDIT IT MANUALLY !                                    *
 *                                                                                                  *
 * file    : ./pixelTMR2/cb_hit_mem8_rtlTMR.v                                                       *
 *                                                                                                  *
 * user    : dataogong                                                                              *
 * host    : 16-11005.local                                                                         *
 * date    : 13/05/2021 11:57:14                                                                    *
 *                                                                                                  *
 * workdir : /Users/dataogong/Documents/Gitlab/ETROCI2C/etroc2_swreadout/rtl/ETROC2Readout          *
 * cmd     : /Users/dataogong/Documents/ActiveDocument/Gitlab/tmrg/bin/tmrg -c tmrgPixel2.cnf       *
 * tmrg rev: e2867c77ccb74667bff8dd6a91891cdefaaa0580                                               *
 *                                                                                                  *
 * src file: memBlock/cb_hit_mem8_rtl.v                                                             *
 *           File is NOT under version control!                                                     *
 *           Modification time : 2021-04-29 14:35:37.397302                                         *
 *           File Size         : 6405                                                               *
 *           MD5 hash          : d997d8687337e4ff6eec45ad3805f595                                   *
 *                                                                                                  *
 ****************************************************************************************************/

`timescale  1ns/1ps

`include "commonDefinition.v"


module cb_hit_mem8_rtl_topTMR(
     QA,
     E1A,
     CLKA,
     CENA,
     AA,
     CLKB,
     CENB,
     AB,
     DB,
     EMAA,
     EMAB,
     RET1N,
     COLLDISN
);
output [7:0] QA;
output E1A;
input CLKA;
input CENA;
input [5:0] AA;
input CLKB;
input CENB;
input [5:0] AB;
input [7:0] DB;
input [2:0] EMAA;
input [2:0] EMAB;
input RET1N;
input COLLDISN;
wire [11:0] QOA;
wire [11:0] DIB;

cb_hit_mem8_fr_topTMR u0 (
          .QOA(QOA),
          .CLKA(CLKA),
          .CENA(CENA),
          .AA(AA),
          .CLKB(CLKB),
          .CENB(CENB),
          .AB(AB),
          .DIB(DIB),
          .EMAA(EMAA),
          .EMAB(EMAB),
          .RET1N(RET1N),
          .COLLDISN(COLLDISN)
          );

cb_hit_mem8_encoderTMR e0 (
          .EDI(DB),
          .EDO(DIB)
          );

cb_hit_mem8_decoderTMR d0 (
          .DDI(QOA),
          .DDO(QA),
          .E1(E1A)
          );
endmodule

module cb_hit_mem8_fr_topTMR(
     QOA,
     CLKA,
     CENA,
     AA,
     CLKB,
     CENB,
     AB,
     DIB,
     EMAA,
     EMAB,
     RET1N,
     COLLDISN
);
output [11:0] QOA;
input CLKA;
input CENA;
input [5:0] AA;
input CLKB;
input CENB;
input [5:0] AB;
input [11:0] DIB;
input [2:0] EMAA;
input [2:0] EMAB;
input RET1N;
input COLLDISN;
wire [11:0] DB;
wire [11:0] QA;
assign DB =  DIB;
assign QOA =  QA;
 `ifdef LATCH_RAM
      latchedBasedRAM #(.data_width(12),.depth(64),.log_depth(6),.delay(4)) u0
 `else
   cb_hit_mem8 u0 
`endif
     (
          .QA(QA),
          .CLKA(CLKA),
          .CENA(CENA),
          .AA(AA),
          .CLKB(CLKB),
          .CENB(CENB),
          .AB(AB),
          .DB(DB),
          .EMAA(EMAA),
          .EMAB(EMAB),
          .RET1N(RET1N),
          .COLLDISN(COLLDISN)
          );
endmodule

module cb_hit_mem8_encoderTMR(
     EDI,
     EDO
);
input [7:0] EDI;
output [11:0] EDO;
assign EDO[0]  =  EDI[0] ^EDI[1] ^EDI[3] ^EDI[4] ;
assign EDO[1]  =  EDI[0] ^EDI[2] ^EDI[3] ^EDI[5] ^EDI[7] ;
assign EDO[2]  =  EDI[0] ;
assign EDO[3]  =  EDI[1] ^EDI[2] ^EDI[3] ^EDI[6] ^EDI[7] ;
assign EDO[4]  =  EDI[1] ;
assign EDO[5]  =  EDI[2] ;
assign EDO[6]  =  EDI[3] ;
assign EDO[7]  =  EDI[4] ^EDI[5] ^EDI[6] ^EDI[7] ;
assign EDO[8]  =  EDI[4] ;
assign EDO[9]  =  EDI[5] ;
assign EDO[10]  =  EDI[6] ;
assign EDO[11]  =  EDI[7] ;
endmodule

module cb_hit_mem8_decoderTMR(
     DDI,
     DDO,
     E1
);
input [11:0] DDI;
output [7:0] DDO;
output E1;
wire [3:0] nc;
wire [7:0] errBit;
wire [11:0] XI;
assign XI =  DDI;
assign nc[0]  =  XI[0] ^XI[2] ^XI[4] ^XI[6] ^XI[8] ;
assign nc[1]  =  XI[1] ^XI[2] ^XI[5] ^XI[6] ^XI[9] ^XI[11] ;
assign nc[2]  =  XI[3] ^XI[4] ^XI[5] ^XI[6] ^XI[10] ^XI[11] ;
assign nc[3]  =  XI[7] ^XI[8] ^XI[9] ^XI[10] ^XI[11] ;
assign E1 =  |nc;
assign errBit[0]  =  ~nc[3] &~nc[2] &nc[1] &nc[0] ;
assign errBit[1]  =  ~nc[3] &nc[2] &~nc[1] &nc[0] ;
assign errBit[2]  =  ~nc[3] &nc[2] &nc[1] &~nc[0] ;
assign errBit[3]  =  ~nc[3] &nc[2] &nc[1] &nc[0] ;
assign errBit[4]  =  nc[3] &~nc[2] &~nc[1] &nc[0] ;
assign errBit[5]  =  nc[3] &~nc[2] &nc[1] &~nc[0] ;
assign errBit[6]  =  nc[3] &nc[2] &~nc[1] &~nc[0] ;
assign errBit[7]  =  nc[3] &nc[2] &nc[1] &~nc[0] ;
assign DDO[0]  =  XI[2] &~errBit[0] |~XI[2] &errBit[0] ;
assign DDO[1]  =  XI[4] &~errBit[1] |~XI[4] &errBit[1] ;
assign DDO[2]  =  XI[5] &~errBit[2] |~XI[5] &errBit[2] ;
assign DDO[3]  =  XI[6] &~errBit[3] |~XI[6] &errBit[3] ;
assign DDO[4]  =  XI[8] &~errBit[4] |~XI[8] &errBit[4] ;
assign DDO[5]  =  XI[9] &~errBit[5] |~XI[9] &errBit[5] ;
assign DDO[6]  =  XI[10] &~errBit[6] |~XI[10] &errBit[6] ;
assign DDO[7]  =  XI[11] &~errBit[7] |~XI[11] &errBit[7] ;
endmodule

