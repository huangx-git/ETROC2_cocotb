/****************************************************************************************************
 *                          ! THIS FILE WAS AUTO-GENERATED BY TMRG TOOL !                           *
 *                                   ! DO NOT EDIT IT MANUALLY !                                    *
 *                                                                                                  *
 * file    : ../output/fanoutGlitchFilterTMR.v                                                      *
 *                                                                                                  *
 * user    : qsun                                                                                   *
 * host    : sphy7asic02.smu.edu                                                                    *
 * date    : 24/01/2022 12:04:51                                                                    *
 *                                                                                                  *
 * workdir : /users/qsun/workarea/tsmc65nm/ETROC_PLL/digital_work/i2c_backend_v5/tmr/work           *
 * cmd     : /users/qsun/workarea/tsmc65nm/ETROC_PLL/digital_work/tmrg/bin/tmrg --log tmrg.log      *
 *           --include --inc-dir /users/qsun/workarea/tsmc65nm/ETROC_PLL/digital_work/git1/etroc2/rtl *
 *           --lib ../simplified_std_cell_lib.v --lib                                               *
 *           /users/qsun/workarea/tsmc65nm/ETROC_PLL/digital_work/git1/etroc2/libs/powerOnResetLong.v *
 *           --lib /users/qsun/workarea/tsmc65nm/ETROC_PLL/digital_work/git1/etroc2/libs/IO_1P2V_C4.v *
 *           --lib                                                                                  *
 *           /users/qsun/workarea/tsmc65nm/ETROC_PLL/digital_work/git1/etroc2/libs/customDigitalLib.v *
 *           -c ../config/tmrg.cnf                                                                  *
 * tmrg rev:                                                                                        *
 *                                                                                                  *
 * src file: /users/qsun/workarea/tsmc65nm/ETROC_PLL/digital_work/git2/etroc2/rtl/fanoutGlitchFilter.v *
 *           File is NOT under version control!                                                     *
 *           Modification time : 2022-01-20 11:50:53.509706                                         *
 *           File Size         : 414                                                                *
 *           MD5 hash          : 1dbc2d7389e20db6b6325166f9eafab1                                   *
 *                                                                                                  *
 ****************************************************************************************************/

`timescale  1ps/1ps
module fanoutGlitchFilterTMR(
     inA,
     inB,
     inC,
     outAA,
     outAB,
     outAC,
     outBA,
     outBB,
     outBC,
     outCA,
     outCB,
     outCC
);
parameter    WIDTH=1;
input [(WIDTH-1):0] inA;
input [(WIDTH-1):0] inB;
input [(WIDTH-1):0] inC;
output [(WIDTH-1):0] outAA;
output [(WIDTH-1):0] outAB;
output [(WIDTH-1):0] outAC;
output [(WIDTH-1):0] outBA;
output [(WIDTH-1):0] outBB;
output [(WIDTH-1):0] outBC;
output [(WIDTH-1):0] outCA;
output [(WIDTH-1):0] outCB;
output [(WIDTH-1):0] outCC;
genvar k;
for(k =  0;k<WIDTH;k =  k+1)
     begin 

          glitchFilter AVAA (
                    .in(inA[k] ),
                    .out(outAA[k] )
                    );

          glitchFilter AVAB (
                    .in(inB[k] ),
                    .out(outAB[k] )
                    );

          glitchFilter AVAC (
                    .in(inC[k] ),
                    .out(outAC[k] )
                    );

          glitchFilter AVBA (
                    .in(inA[k] ),
                    .out(outBA[k] )
                    );

          glitchFilter AVBB (
                    .in(inB[k] ),
                    .out(outBB[k] )
                    );

          glitchFilter AVBC (
                    .in(inC[k] ),
                    .out(outBC[k] )
                    );

          glitchFilter AVCA (
                    .in(inA[k] ),
                    .out(outCA[k] )
                    );

          glitchFilter AVCB (
                    .in(inB[k] ),
                    .out(outCB[k] )
                    );

          glitchFilter AVCC (
                    .in(inC[k] ),
                    .out(outCC[k] )
                    );
     end
endmodule

