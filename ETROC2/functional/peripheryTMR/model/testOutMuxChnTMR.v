/****************************************************************************************************
 *                          ! THIS FILE WAS AUTO-GENERATED BY TMRG TOOL !                           *
 *                                   ! DO NOT EDIT IT MANUALLY !                                    *
 *                                                                                                  *
 * file    : ../output/testOutMuxChnTMR.v                                                           *
 *                                                                                                  *
 * user    : qsun                                                                                   *
 * host    : sphy7asic02.smu.edu                                                                    *
 * date    : 24/01/2022 12:04:54                                                                    *
 *                                                                                                  *
 * workdir : /users/qsun/workarea/tsmc65nm/ETROC_PLL/digital_work/i2c_backend_v5/tmr/work           *
 * cmd     : /users/qsun/workarea/tsmc65nm/ETROC_PLL/digital_work/tmrg/bin/tmrg --log tmrg.log      *
 *           --include --inc-dir /users/qsun/workarea/tsmc65nm/ETROC_PLL/digital_work/git1/etroc2/rtl *
 *           --lib ../simplified_std_cell_lib.v --lib                                               *
 *           /users/qsun/workarea/tsmc65nm/ETROC_PLL/digital_work/git1/etroc2/libs/powerOnResetLong.v *
 *           --lib /users/qsun/workarea/tsmc65nm/ETROC_PLL/digital_work/git1/etroc2/libs/IO_1P2V_C4.v *
 *           --lib                                                                                  *
 *           /users/qsun/workarea/tsmc65nm/ETROC_PLL/digital_work/git1/etroc2/libs/customDigitalLib.v *
 *           -c ../config/tmrg.cnf                                                                  *
 * tmrg rev:                                                                                        *
 *                                                                                                  *
 * src file: /users/qsun/workarea/tsmc65nm/ETROC_PLL/digital_work/git2/etroc2/rtl/testOutMuxChn.v   *
 *           File is NOT under version control!                                                     *
 *           Modification time : 2022-01-20 11:50:53.576696                                         *
 *           File Size         : 3326                                                               *
 *           MD5 hash          : 00c0913dce978658877d0dc0370a138b                                   *
 *                                                                                                  *
 ****************************************************************************************************/

`timescale  1ps/1ps
module testOutMuxChn(
     input [31:0] inputSignals,
     input [4:0] testOutSelect,
     output  testOutput
);
wire [31:0] l0 =  inputSignals;
wire [15:0] l1;
wire [7:0] l2;
wire [3:0] l3;
wire [1:0] l4;
wire [0:0] l5;
genvar i;
wire [7:0] testOutSelect_buf;

CKBD2 BIT0_preserve (
          .I(testOutSelect[0] ),
          .Z(testOutSelect_buf[0] )
          );

CKBD2 BIT1_preserve (
          .I(testOutSelect[1] ),
          .Z(testOutSelect_buf[1] )
          );

CKBD2 BIT2_preserve (
          .I(testOutSelect[2] ),
          .Z(testOutSelect_buf[2] )
          );

CKBD2 BIT3_preserve (
          .I(testOutSelect[3] ),
          .Z(testOutSelect_buf[3] )
          );

CKBD2 BIT4_preserve (
          .I(testOutSelect[4] ),
          .Z(testOutSelect_buf[4] )
          );

generate
     for(i =  0;i<16;i =  i+1)
          begin : mux0 

               CKMUX2D1 mux3_preserve (
                         .I0(l0[i*2+0] ),
                         .I1(l0[i*2+1] ),
                         .S(testOutSelect_buf[0] ),
                         .Z(l1[i] )
                         );
          end

endgenerate

generate
     for(i =  0;i<8;i =  i+1)
          begin : mux1 

               CKMUX2D1 mux4_preserve (
                         .I0(l1[i*2+0] ),
                         .I1(l1[i*2+1] ),
                         .S(testOutSelect_buf[1] ),
                         .Z(l2[i] )
                         );
          end

endgenerate

generate
     for(i =  0;i<4;i =  i+1)
          begin : mux2 

               CKMUX2D1 mux5_preserve (
                         .I0(l2[i*2+0] ),
                         .I1(l2[i*2+1] ),
                         .S(testOutSelect_buf[2] ),
                         .Z(l3[i] )
                         );
          end

endgenerate

generate
     for(i =  0;i<2;i =  i+1)
          begin : mux3 

               CKMUX2D1 mux6_preserve (
                         .I0(l3[i*2+0] ),
                         .I1(l3[i*2+1] ),
                         .S(testOutSelect_buf[3] ),
                         .Z(l4[i] )
                         );
          end

endgenerate

generate
     for(i =  0;i<1;i =  i+1)
          begin : mux4 

               CKMUX2D4 mux7_preserve (
                         .I0(l4[i*2+0] ),
                         .I1(l4[i*2+1] ),
                         .S(testOutSelect_buf[4] ),
                         .Z(l5[0] )
                         );
          end

endgenerate

CKBD4 BITB_preserve (
          .I(l5[0] ),
          .Z(testOutput)
          );
endmodule

