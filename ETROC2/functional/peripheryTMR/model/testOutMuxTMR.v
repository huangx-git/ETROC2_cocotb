/****************************************************************************************************
 *                          ! THIS FILE WAS AUTO-GENERATED BY TMRG TOOL !                           *
 *                                   ! DO NOT EDIT IT MANUALLY !                                    *
 *                                                                                                  *
 * file    : ../output/testOutMuxTMR.v                                                              *
 *                                                                                                  *
 * user    : qsun                                                                                   *
 * host    : sphy7asic02.smu.edu                                                                    *
 * date    : 24/01/2022 12:04:54                                                                    *
 *                                                                                                  *
 * workdir : /users/qsun/workarea/tsmc65nm/ETROC_PLL/digital_work/i2c_backend_v5/tmr/work           *
 * cmd     : /users/qsun/workarea/tsmc65nm/ETROC_PLL/digital_work/tmrg/bin/tmrg --log tmrg.log      *
 *           --include --inc-dir /users/qsun/workarea/tsmc65nm/ETROC_PLL/digital_work/git1/etroc2/rtl *
 *           --lib ../simplified_std_cell_lib.v --lib                                               *
 *           /users/qsun/workarea/tsmc65nm/ETROC_PLL/digital_work/git1/etroc2/libs/powerOnResetLong.v *
 *           --lib /users/qsun/workarea/tsmc65nm/ETROC_PLL/digital_work/git1/etroc2/libs/IO_1P2V_C4.v *
 *           --lib                                                                                  *
 *           /users/qsun/workarea/tsmc65nm/ETROC_PLL/digital_work/git1/etroc2/libs/customDigitalLib.v *
 *           -c ../config/tmrg.cnf                                                                  *
 * tmrg rev:                                                                                        *
 *                                                                                                  *
 * src file: /users/qsun/workarea/tsmc65nm/ETROC_PLL/digital_work/git2/etroc2/rtl/testOutMux.v      *
 *           File is NOT under version control!                                                     *
 *           Modification time : 2022-01-20 11:50:53.574697                                         *
 *           File Size         : 2473                                                               *
 *           MD5 hash          : 1f764c7c9b4bebd51b0876c40630ea4e                                   *
 *                                                                                                  *
 ****************************************************************************************************/

`timescale  1ps/1ps
module testOutMuxTMR #(
  parameter SELBITS=5
)(
     input [31:0] inputSignals,
     input [SELBITS-1:0] testOutSelect,
     input  magicNumberOKA,
     input  magicNumberOKB,
     input  magicNumberOKC,
     output  testOutput,
     output  testOutputEnA,
     output  testOutputEnB,
     output  testOutputEnC
);
wire [SELBITS-1:0] testOutSelectC;
wire [SELBITS-1:0] testOutSelectB;
wire [SELBITS-1:0] testOutSelectA;
wor magicNumberOKTmrError;
wire magicNumberOK;
reg  [31:0] gate;
wire [31:0] inputSignalsGated;
integer j;

always @( testOutSelect )
     begin
          gate =  32'b0;
          for(j =  0;j<32;j =  j+1)
               begin
                    if (testOutSelect==j)
                         gate[j]  =  1'b1;
               end
     end
genvar i;

generate
     for(i =  0;i<32;i =  i+1)
          begin : gates 

               CKAN2D2 inputGate_preserve (
                         .A1(inputSignals[i] ),
                         .A2(gate[i] ),
                         .Z(inputSignalsGated[i] )
                         );
          end

endgenerate
wire testOutputRaw;

testOutMuxChn FM (
          .inputSignals(inputSignalsGated),
          .testOutSelect(testOutSelect),
          .testOutput(testOutputRaw)
          );
assign testOutput =  testOutputRaw&magicNumberOK;
assign testOutputEnA =  (| testOutSelectA )&magicNumberOKA;
assign testOutputEnB =  (| testOutSelectB )&magicNumberOKB;
assign testOutputEnC =  (| testOutSelectC )&magicNumberOKC;

majorityVoter magicNumberOKVoter (
          .inA(magicNumberOKA),
          .inB(magicNumberOKB),
          .inC(magicNumberOKC),
          .out(magicNumberOK),
          .tmrErr(magicNumberOKTmrError)
          );

fanout #(.WIDTH(((SELBITS-1)>(0)) ? ((SELBITS-1)-(0)+1) : ((0)-(SELBITS-1)+1))) testOutSelectFanout (
          .in(testOutSelect),
          .outA(testOutSelectA),
          .outB(testOutSelectB),
          .outC(testOutSelectC)
          );
endmodule

